//-------------------------------------------------------------------------------------------------
//--- 010 Editor v14.0.1 Binary Template
//
// File:      EX5 S1V File
// Author:    Derek Cook
// Revision:  V1
// Purpose:   Decoding of the Yamaha EX5 S1V File Format which contains EX5 Voices
//
// Notes:     Read this template from the bottom up! Structures need to be defined before use
//
//-------------------------------------------------------------------------------------------------

#ifndef S1V_FILE

  #define S1V_FILE

  //
  // Decimal constant definitions
  //
  
  #define S1V_HEADER_FILE_ID_LENGTH           16
  #define S1V_HEADER_RESERVED_LENGTH         112
  
  //
  // Includes
  //
  
  #include "EX5 S1V Voice Common.bt"
  #include "EX5 S1V Voice Element.bt"
  
  #ifndef S1A_FILE
  
    #include "EX5 S1V Functions.bt"
  
  #endif
  
  // 
  // The S1V file header
  //
  
  struct S1V_HEADER {
  
    char  FileID[S1V_HEADER_FILE_ID_LENGTH];     // The file ID for S1M files
    ubyte reserved[S1V_HEADER_RESERVED_LENGTH];  // reserved block of zero bytes
                                               
  };
  
  //////////////////////////////////////////////////////////////////////////
  // Start of the S1V template 
  // Data is big endian, but bit fields are right to left
  
  BigEndian();
  BitfieldRightToLeft();
  
  S1V_HEADER        header;        
  S1V_ELEMENT_MAP   elementMap;     
  S1V_VOICE_COMMON  voiceCommon[S1V_NUMBER_OF_VOICES] <optimize=false>;                 
  S1V_VOICE_ELEMENT voiceElement[S1V_TOTAL_NUMBER_OF_ELEMENTS] <optimize=false>;                      
  
  //
  // End of S1V File
  //
  
  //
  // Some information to display when running the template
  //
  // uncomment if you wish to debug
  //
    
  DisplayVoiceInformation();
  //DisplayElementCount();
  //DisplayElementInformation();
  
#endif
